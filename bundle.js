(function (d3) {
  'use strict';

  const svg = d3.select("svg");

  // const width = document.body.clientWidth > 960? document.body.clientWidth:960;
  // const height = document.body.clientHeight > 500? document.body.clientHeight:600;

  const width = document.body.clientWidth * 2;
  const height = document.body.clientHeight;
  const margin = {top:100,bottom:0,left:20,right:0};
  const innerHeight = width - margin.left - margin.right;

  const treeLayout = d3.cluster().size([innerHeight, height]);

  var zoomG = svg
    	.attr("width", width)
      .attr("height", height)
    .append("g");


  var g = zoomG.append("g")
  						 .attr("transform", `translate(${margin.left}, ${margin.top})`);

  svg.call(d3.zoom().on("zoom", ()=> {
  	zoomG.attr("transform", d3.event.transform);
  }));

  d3.json("data.json").then(data => {
  	  const root = d3.hierarchy(data);
    	const links = treeLayout(root).links();
      
      g.selectAll("path").data(links)
    		.enter().append("path")
    			.attr("d", d3.linkHorizontal()
               				.x(d=>d.y)
    									.y(d=>d.x));
    
    	// add new path for animation
  		g.selectAll("path.flow").data(links)
    		.enter().append("path")
    			.attr("class", "flow")
    			.attr("d", d3.linkHorizontal()
               				.x(d=>d.y)
    									.y(d=>d.x));
    
    	g.selectAll("text").data(root.descendants())
    		.enter().append("text")
    			.attr("x", d => d.y)
    		  .attr("y", d => d.x)
    			.attr("dy", "0.3em")
          .attr("text-anchor", d => d.children ? "middle": "start")
          .attr("font-size", d => ((4 - d.depth) / 2) + "em")
    			.text(d=> d.data.data.id);  
  });

}(d3));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7c2VsZWN0LFxuICAgICAgICBqc29uLFxuICAgICAgICB0cmVlLFxuICAgICAgICBjbHVzdGVyLFxuICAgICAgIFx0aGllcmFyY2h5LFxuICAgICAgICBsaW5rSG9yaXpvbnRhbCxcbiAgICAgICAgem9vbSxcbiAgICAgICAgZXZlbnRcbiAgICAgICB9IGZyb20gXCJkM1wiO1xuXG5jb25zdCBzdmcgPSBzZWxlY3QoXCJzdmdcIik7XG5cbi8vIGNvbnN0IHdpZHRoID0gZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCA+IDk2MD8gZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDo5NjA7XG4vLyBjb25zdCBoZWlnaHQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodCA+IDUwMD8gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ6NjAwO1xuXG5jb25zdCB3aWR0aCA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggKiAyO1xuY29uc3QgaGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7XG5jb25zdCBtYXJnaW4gPSB7dG9wOjEwMCxib3R0b206MCxsZWZ0OjIwLHJpZ2h0OjB9O1xuY29uc3QgaW5uZXJIZWlnaHQgPSB3aWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0O1xuY29uc3QgaW5uZXJXaXRkaCA9IHdpZHRoIC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b207XG5cbmNvbnN0IHRyZWVMYXlvdXQgPSBjbHVzdGVyKCkuc2l6ZShbaW5uZXJIZWlnaHQsIGhlaWdodF0pXG5cbnZhciB6b29tRyA9IHN2Z1xuICBcdC5hdHRyKFwid2lkdGhcIiwgd2lkdGgpXG4gICAgLmF0dHIoXCJoZWlnaHRcIiwgaGVpZ2h0KVxuICAuYXBwZW5kKFwiZ1wiKTtcblxuXG52YXIgZyA9IHpvb21HLmFwcGVuZChcImdcIilcblx0XHRcdFx0XHRcdCAuYXR0cihcInRyYW5zZm9ybVwiLCBgdHJhbnNsYXRlKCR7bWFyZ2luLmxlZnR9LCAke21hcmdpbi50b3B9KWApXG5cbnN2Zy5jYWxsKHpvb20oKS5vbihcInpvb21cIiwgKCk9PiB7XG5cdHpvb21HLmF0dHIoXCJ0cmFuc2Zvcm1cIiwgZXZlbnQudHJhbnNmb3JtKVxufSkpXG5cbmpzb24oXCJkYXRhLmpzb25cIikudGhlbihkYXRhID0+IHtcblx0ICBjb25zdCByb290ID0gaGllcmFyY2h5KGRhdGEpO1xuICBcdGNvbnN0IGxpbmtzID0gdHJlZUxheW91dChyb290KS5saW5rcygpXG4gICAgXG4gICAgZy5zZWxlY3RBbGwoXCJwYXRoXCIpLmRhdGEobGlua3MpXG4gIFx0XHQuZW50ZXIoKS5hcHBlbmQoXCJwYXRoXCIpXG4gIFx0XHRcdC5hdHRyKFwiZFwiLCBsaW5rSG9yaXpvbnRhbCgpXG4gICAgICAgICAgICAgXHRcdFx0XHQueChkPT5kLnkpXG4gIFx0XHRcdFx0XHRcdFx0XHRcdC55KGQ9PmQueCkpXG4gIFxuICBcdC8vIGFkZCBuZXcgcGF0aCBmb3IgYW5pbWF0aW9uXG5cdFx0Zy5zZWxlY3RBbGwoXCJwYXRoLmZsb3dcIikuZGF0YShsaW5rcylcbiAgXHRcdC5lbnRlcigpLmFwcGVuZChcInBhdGhcIilcbiAgXHRcdFx0LmF0dHIoXCJjbGFzc1wiLCBcImZsb3dcIilcbiAgXHRcdFx0LmF0dHIoXCJkXCIsIGxpbmtIb3Jpem9udGFsKClcbiAgICAgICAgICAgICBcdFx0XHRcdC54KGQ9PmQueSlcbiAgXHRcdFx0XHRcdFx0XHRcdFx0LnkoZD0+ZC54KSlcbiAgXG4gIFx0Zy5zZWxlY3RBbGwoXCJ0ZXh0XCIpLmRhdGEocm9vdC5kZXNjZW5kYW50cygpKVxuICBcdFx0LmVudGVyKCkuYXBwZW5kKFwidGV4dFwiKVxuICBcdFx0XHQuYXR0cihcInhcIiwgZCA9PiBkLnkpXG4gIFx0XHQgIC5hdHRyKFwieVwiLCBkID0+IGQueClcbiAgXHRcdFx0LmF0dHIoXCJkeVwiLCBcIjAuM2VtXCIpXG4gICAgICAgIC5hdHRyKFwidGV4dC1hbmNob3JcIiwgZCA9PiBkLmNoaWxkcmVuID8gXCJtaWRkbGVcIjogXCJzdGFydFwiKVxuICAgICAgICAuYXR0cihcImZvbnQtc2l6ZVwiLCBkID0+ICgoNCAtIGQuZGVwdGgpIC8gMikgKyBcImVtXCIpXG4gIFx0XHRcdC50ZXh0KGQ9PiBkLmRhdGEuZGF0YS5pZCkgIFxufSkiXSwibmFtZXMiOlsic2VsZWN0IiwiY2x1c3RlciIsInpvb20iLCJldmVudCIsImpzb24iLCJoaWVyYXJjaHkiLCJsaW5rSG9yaXpvbnRhbCJdLCJtYXBwaW5ncyI6Ijs7O0VBVUEsTUFBTSxHQUFHLEdBQUdBLFNBQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQzs7Ozs7RUFLMUIsTUFBTSxLQUFLLEdBQUcsUUFBUSxDQUFDLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxDQUFDO0VBQzVDLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDO0VBQzFDLE1BQU0sTUFBTSxHQUFHLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQ2xELE1BQU0sV0FBVyxHQUFHLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7O0VBR3ZELE1BQU0sVUFBVSxHQUFHQyxVQUFPLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxXQUFXLEVBQUUsTUFBTSxDQUFDLEVBQUM7O0VBRXhELElBQUksS0FBSyxHQUFHLEdBQUc7TUFDWCxJQUFJLENBQUMsT0FBTyxFQUFFLEtBQUssQ0FBQztPQUNuQixJQUFJLENBQUMsUUFBUSxFQUFFLE1BQU0sQ0FBQztLQUN4QixNQUFNLENBQUMsR0FBRyxDQUFDLENBQUM7OztFQUdmLElBQUksQ0FBQyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDO1VBQ2pCLElBQUksQ0FBQyxXQUFXLEVBQUUsQ0FBQyxVQUFVLEVBQUUsTUFBTSxDQUFDLElBQUksQ0FBQyxFQUFFLEVBQUUsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsRUFBQzs7RUFFckUsR0FBRyxDQUFDLElBQUksQ0FBQ0MsT0FBSSxFQUFFLENBQUMsRUFBRSxDQUFDLE1BQU0sRUFBRSxLQUFLO0dBQy9CLEtBQUssQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFQyxRQUFLLENBQUMsU0FBUyxFQUFDO0dBQ3hDLENBQUMsRUFBQzs7QUFFSEMsU0FBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLElBQUk7S0FDNUIsTUFBTSxJQUFJLEdBQUdDLFlBQVMsQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUM3QixNQUFNLEtBQUssR0FBRyxVQUFVLENBQUMsSUFBSSxDQUFDLENBQUMsS0FBSyxHQUFFOztNQUVyQyxDQUFDLENBQUMsU0FBUyxDQUFDLE1BQU0sQ0FBQyxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7T0FDOUIsS0FBSyxFQUFFLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQztRQUNyQixJQUFJLENBQUMsR0FBRyxFQUFFQyxpQkFBYyxFQUFFO29CQUNkLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztjQUNmLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFDOzs7SUFHcEIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO09BQ2pDLEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLEdBQUcsRUFBRUEsaUJBQWMsRUFBRTtvQkFDZCxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7Y0FDZixDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsRUFBQzs7S0FFbkIsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO09BQzFDLEtBQUssRUFBRSxDQUFDLE1BQU0sQ0FBQyxNQUFNLENBQUM7UUFDckIsSUFBSSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztTQUNsQixJQUFJLENBQUMsR0FBRyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ3BCLElBQUksQ0FBQyxJQUFJLEVBQUUsT0FBTyxDQUFDO1dBQ2hCLElBQUksQ0FBQyxhQUFhLEVBQUUsQ0FBQyxJQUFJLENBQUMsQ0FBQyxRQUFRLEdBQUcsUUFBUSxFQUFFLE9BQU8sQ0FBQztXQUN4RCxJQUFJLENBQUMsV0FBVyxFQUFFLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxLQUFLLElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQztRQUNyRCxJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLEVBQUUsRUFBQztHQUM3Qjs7OzsifQ==